Executing (default): SELECT 1+1 AS result
Executing (default): SELECT table_name FROM information_schema.tables WHERE table_schema = 'public' AND table_name = 'Projects'
Database connected...
Executing (default): CREATE TABLE IF NOT EXISTS "Projects" ("id"   SERIAL , "name" VARCHAR(255) NOT NULL, "description" TEXT, "createdAt" TIMESTAMP WITH TIME ZONE NOT NULL, "updatedAt" TIMESTAMP WITH TIME ZONE NOT NULL, PRIMARY KEY ("id"));
Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'Projects' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
Executing (default): SELECT table_name FROM information_schema.tables WHERE table_schema = 'public' AND table_name = 'Tasks'
Executing (default): CREATE TABLE IF NOT EXISTS "Tasks" ("id"   SERIAL , "title" VARCHAR(255) NOT NULL, "description" TEXT, "dueDate" TIMESTAMP WITH TIME ZONE, "priority" VARCHAR(255), "status" VARCHAR(255) NOT NULL DEFAULT 'pending', "createdAt" TIMESTAMP WITH TIME ZONE NOT NULL, "updatedAt" TIMESTAMP WITH TIME ZONE NOT NULL, "ProjectId" INTEGER REFERENCES "Projects" ("id") ON DELETE SET NULL ON UPDATE CASCADE, PRIMARY KEY ("id"));
Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'Tasks' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
Executing (default): SELECT table_name FROM information_schema.tables WHERE table_schema = 'public' AND table_name = 'Users'
Executing (default): CREATE TABLE IF NOT EXISTS "Users" ("id"   SERIAL , "name" VARCHAR(255) NOT NULL, "email" VARCHAR(255) NOT NULL UNIQUE, "password" VARCHAR(255) NOT NULL, "createdAt" TIMESTAMP WITH TIME ZONE NOT NULL, "updatedAt" TIMESTAMP WITH TIME ZONE NOT NULL, PRIMARY KEY ("id"));
Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'Users' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
Server is running on port 3000
Executing (default): SELECT "Project"."id", "Project"."name", "Project"."description", "Project"."createdAt", "Project"."updatedAt", "Tasks"."id" AS "Tasks.id", "Tasks"."title" AS "Tasks.title", "Tasks"."description" AS "Tasks.description", "Tasks"."dueDate" AS "Tasks.dueDate", "Tasks"."priority" AS "Tasks.priority", "Tasks"."status" AS "Tasks.status", "Tasks"."createdAt" AS "Tasks.createdAt", "Tasks"."updatedAt" AS "Tasks.updatedAt", "Tasks"."ProjectId" AS "Tasks.ProjectId" FROM "Projects" AS "Project" LEFT OUTER JOIN "Tasks" AS "Tasks" ON "Project"."id" = "Tasks"."ProjectId";
